#!/usr/bin/env bash

# Prepares the system for running the Dockerific ELK stack.
# Run without arguments to see usage details.

# Copyright 2016 Filip Božanić Dimovski <dimfilip20@gmail.com>
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# Stop the scipt in case any error occurs
set -e

# Echo all commands as they are called in the script's execution
#~ set -x


# Define some important functions
function die () {
    # Show error message and quit
    echo >&2 -e "$@"
    exit 2
}

function delk-install() {
    # Configure rsyslog
    echo -n "- Configuring rsyslog..."
    if [ ! -f /etc/rsyslog.d/99-emit-logs.conf ]; then
        echo "*.*    @@localhost:5000" > /etc/rsyslog.d/99-emit-logs.conf
        service rsyslog restart 2>&1 1>/dev/null
        echo "DONE"
    else
        echo "already configured, skipping."
    fi

    # Configure sysctl
    echo -n "- Configuring sysctl..."
    if [ ! -f /etc/sysctl.d/99-increase-max-map-count.conf ]; then
        echo "vm.max_map_count=262144" > /etc/sysctl.d/99-increase-max-map-count.conf
        sysctl -q --system 2>&1 1>/dev/null
        echo "DONE"
    else
        echo "already configured, skipping."
    fi

    # Install ls-images
    echo -n "- Installing ls-images utility..."
    if [ ! -x /usr/local/bin/ls-images ]; then
        cp -f ./ls-images /usr/local/bin/ls-images
        chmod 755 /usr/local/bin/ls-images
        echo "DONE"
    else
        echo "already installed, skipping."
    fi

    # Install maintenance scripts
    echo -n "- Installing maintenance scripts..."
    if [ ! -f /usr/local/bin/delk-maintenance ]; then
        cp -f ./delk-maintenance /usr/local/bin/delk-maintenance
        chmod 755 /usr/local/bin/delk-maintenance
        
        echo "DONE"
    else
        echo "already installed, skipping."
    fi
}


# Quit if not running as superuser
[ ! $EUID = 0 ] || die "$0 must be run as superuser."

# Quit if Docker is missing
which docker 1>/dev/null || die "Docker cannot be found. Dockerific ELK stack reqires Docker to run.\nRefer to the project's documentation for installation instructions."






# Process the switches
case "$1" in
    'install')
        delk-install
    ;;
    'remove')
        delk-remove
    ;;
    'status')
        delk-status
    ;;
    *)
        echo "$0 - script for setting up Dockerific ELK stack"
        echo "Usage: $0 install|remove|status"
        echo "Requires superuser privileges to run."
        echo
        echo "Copyright (c) 2016 Filip Božanić Dimovski"
        echo "Licensed under the GNU General Public License version 3"
        exit 1
    ;;
esac
